name: Remote Deployment Dev

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install SSH Client
        run: sudo apt-get install -y sshpass

      - name: Get Short Commit Hash
        id: get_commit_hash
        run: echo "SHORT_HASH=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV

      - name: Deploy via SSH
        env:
          SSH_HOST: ${{ secrets.DEV_SSH_HOST }}
          SSH_USER: ${{ secrets.DEV_SSH_USER }}
          SSH_PASSWORD: ${{ secrets.DEV_SSH_PASSWORD }}
          SHORT_HASH: ${{ env.SHORT_HASH }}
        run: |
          sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << 'EOF'
            cd /root/dev/frontend-skillfy

            # Atualizando arquivos do GitHub
            git pull origin dev

            # Parar e remover o contêiner existente, se existir
            CONTAINER_ID=$(docker ps -q --filter "name=frontend-")
            if [ -n "$CONTAINER_ID" ]; then
              echo "Parando e removendo o contêiner existente: $CONTAINER_ID"
              docker stop $CONTAINER_ID
              docker rm $CONTAINER_ID
            else
              echo "Nenhum contêiner existente encontrado"
            fi
            
            # Construir e iniciar o novo contêiner com o nome desejado
            echo "Iniciando o contêiner..."
            docker build -t frontend-$SHORT_HASH .

            # Iniciar o novo contêiner
            docker run -d --name frontend-$SHORT_HASH -p 3000:3000 frontend-$SHORT_HASH

            echo "Contêiner iniciado com o nome: frontend-$SHORT_HASH"
          EOF
