name: Remote Deployment Dev
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install SSH Client
      run: sudo apt-get install -y sshpass

    - name: Get Short Commit Hash
      id: get_commit_hash
      run: echo "SHORT_HASH=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV

    - name: Deploy via SSH
      env:
        SSH_HOST: ${{ secrets.DEV_SSH_HOST }}
        SSH_USER: ${{ secrets.DEV_SSH_USER }}
        SSH_PASSWORD: ${{ secrets.DEV_SSH_PASSWORD }}
        SHORT_HASH: ${{ env.SHORT_HASH }}  # Verifique se SHORT_HASH está definido corretamente
      run: |
        sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << EOF
          cd /root/dev/frontend-skillfy

          # Limpar o arquivo .env.tmp
          echo "" > .env.tmp

          # Adicionar o SHORT_HASH ao .env.tmp sem espaços
          echo "HASH=$SHORT_HASH" >> .env.tmp

          # Atualizando arquivos do GitHub
          git pull origin dev

          # Parar e remover o contêiner existente, se existir
          CONTAINER_ID=\$(docker ps -q --filter "name=frontend-")
          if [ -n "\$CONTAINER_ID" ]; then
            echo "Parando e removendo o contêiner existente: \$CONTAINER_ID"
            docker stop \$CONTAINER_ID
            docker rm \$CONTAINER_ID
          else
            echo "Nenhum contêiner existente encontrado"
          fi

          # Reconstruir a imagem Docker sem cache
          docker-compose build --no-cache

          # Iniciar o novo contêiner com o nome desejado
          NEW_CONTAINER_NAME="frontend-\$SHORT_HASH"
          echo "Iniciando o contêiner com nome: \$NEW_CONTAINER_NAME"
          docker-compose up -d --remove-orphans

          # Adicionar um pequeno atraso
          sleep 5

          # Renomear o contêiner para incluir o hash do commit
          NEW_CONTAINER_ID=\$(docker ps -q --filter "name=frontend-")
          if [ -n "\$NEW_CONTAINER_ID" ]; then
            echo "Renomeando o contêiner com o hash: \$SHORT_HASH"
            docker rename \$NEW_CONTAINER_ID \$NEW_CONTAINER_NAME
          else
            echo "Erro: Nenhum contêiner encontrado para renomear"
            exit 1
          fi
        EOF
